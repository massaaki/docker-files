version: '3.1'
services:
  production-nginx-container:
    container_name: 'production-nginx-container'
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./production.conf:/etc/nginx/conf.d/default.conf
      - ./data/html:/var/www/html
      - ./dh-param/dhparam-2048.pem:/etc/ssl/certs/dhparam-2048.pem
      - /docker-volumes/etc/letsencrypt/live/staging.mti.work/fullchain.pem:/etc/letsencrypt/live/staging.mti.work/fullchain.pem
      - /docker-volumes/etc/letsencrypt/live/staging.mti.work/privkey.pem:/etc/letsencrypt/live/staging.mti.work/privkey.pem
    links:
      - wordpress
    networks:
      - docker-network
    restart: always
  mysql: 
    image: mariadb
    ports:
      - "3306:3306"
    volumes:
      - /data/mysql:/var/lib/mysql
    networks:
      - docker-network
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: mti_work
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    restart: always
  wordpress:
    image: wordpress:php7.3-fpm-alpine
    ports:
      - "9000:9000"
    volumes:
      - ./data/html:/var/www/html
    depends_on:
      - mysql
    networks:
      - docker-network
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: somewordpress
    links:
      - mysql
    restart: always

networks:
  docker-network:
    driver: bridge

